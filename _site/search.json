[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SAS and R comparisons",
    "section": "",
    "text": "In this tutorial, we’ll review some of the data manipulations often performed in SAS, but in R. The tutorial is based on the following document:https://github.com/rstudio/cheatsheets/blob/main/pngs/sas-r.png"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "SAS and R comparisons",
    "section": "",
    "text": "In this tutorial, we’ll review some of the data manipulations often performed in SAS, but in R. The tutorial is based on the following document:https://github.com/rstudio/cheatsheets/blob/main/pngs/sas-r.png"
  },
  {
    "objectID": "index.html#installing-packages",
    "href": "index.html#installing-packages",
    "title": "SAS and R comparisons",
    "section": "Installing packages",
    "text": "Installing packages\n\n#install.packages(\"tidyverse\")\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "index.html#donwloading-data",
    "href": "index.html#donwloading-data",
    "title": "SAS and R comparisons",
    "section": "Donwloading data",
    "text": "Donwloading data\n\n# set your working directory\nsetwd(\"C:/Users/chris/OneDrive/Desktop/programming\")\n\n# Define the URL of the ZIP file you want to download\nzip_url &lt;- \"https://www150.statcan.gc.ca/n1/en/pub/71m0001x/2021001/2023-09-CSV.zip\"\n\n# Specify the destination directory where you want to save the ZIP file\ndestination_dir &lt;- \"C:/Users/chris/OneDrive/Desktop/programming/session3\"\n\n# Use download.file to download the ZIP file\ndownload.file(zip_url, destfile = file.path(destination_dir, \"2023-09-CSV.zip\"), mode = \"wb\")\n\n# Unzip the downloaded file\nunzip(file.path(destination_dir, \"2023-09-CSV.zip\"), exdir = paste0(destination_dir, \"/data\"))\n\n# You can now access the contents of the ZIP file in the destination directory"
  },
  {
    "objectID": "index.html#reading-data",
    "href": "index.html#reading-data",
    "title": "SAS and R comparisons",
    "section": "Reading data",
    "text": "Reading data\nIn this section, read a CSV dataset into a data.frame. Convert the data.frame into a tibble (https://tibble.tidyverse.org/).\n\nsetwd(paste0(destination_dir, \"/\", \"data\")) # set the working directory\nlfs_2023 &lt;- read.csv(file = \"pub0923.csv\") # read the file\nhead(lfs_2023)\n\n  REC_NUM SURVYEAR SURVMNTH LFSSTAT PROV CMA AGE_12 AGE_6 SEX MARSTAT EDUC MJH\n1       1     2023        9       4   48   7     10    NA   2       1    2  NA\n2       2     2023        9       1   13   0     10    NA   1       1    5   1\n3       3     2023        9       4   24   0     12    NA   2       2    0  NA\n4       4     2023        9       1   47   0      7    NA   1       1    2   1\n5       5     2023        9       1   46   6      9    NA   1       6    3   1\n6       6     2023        9       4   35   3      2     4   2       2    4  NA\n  EVERWORK FTPTLAST COWMAIN IMMIG NAICS_21 NOC_10 NOC_43 YABSENT WKSAWAY\n1        2       NA      NA     3       NA     NA     NA      NA      NA\n2       NA       NA       6     3       15      9     40      NA      NA\n3        2       NA      NA     3       NA     NA     NA      NA      NA\n4       NA       NA       5     2        6      8     35      NA      NA\n5       NA       NA       6     3        6      1      4      NA      NA\n6        2       NA      NA     3       NA     NA     NA      NA      NA\n  PAYAWAY UHRSMAIN AHRSMAIN FTPTMAIN UTOTHRS ATOTHRS HRSAWAY YAWAY PAIDOT\n1      NA       NA       NA       NA      NA      NA      NA    NA     NA\n2      NA      250      250        2     250     250      NA    NA     NA\n3      NA       NA       NA       NA      NA      NA      NA    NA     NA\n4      NA      400      400        1     400     400      NA    NA     NA\n5      NA      500      500        1     500     500      NA    NA     NA\n6      NA       NA       NA       NA      NA      NA      NA    NA     NA\n  UNPAIDOT XTRAHRS WHYPT TENURE PREVTEN HRLYEARN UNION PERMTEMP ESTSIZE\n1       NA      NA    NA     NA      NA       NA    NA       NA      NA\n2       NA      NA     1      4      NA       NA    NA       NA      NA\n3       NA      NA    NA     NA      NA       NA    NA       NA      NA\n4       NA      NA    NA     40      NA       NA    NA       NA      NA\n5       NA      NA    NA    240      NA       NA    NA       NA      NA\n6       NA      NA    NA     NA      NA       NA    NA       NA      NA\n  FIRMSIZE DURUNEMP FLOWUNEM UNEMFTPT WHYLEFTO WHYLEFTN DURJLESS AVAILABL\n1       NA       NA       NA       NA       NA       NA      159       NA\n2       NA       NA       NA       NA       NA       NA       NA       NA\n3       NA       NA       NA       NA       NA       NA      185       NA\n4       NA       NA       NA       NA       NA       NA       NA       NA\n5       NA       NA       NA       NA       NA       NA       NA       NA\n6       NA       NA       NA       NA       NA       NA       17       NA\n  LKPUBAG LKEMPLOY LKRELS LKATADS LKANSADS LKOTHERN PRIORACT YNOLOOK TLOLOOK\n1      NA       NA     NA      NA       NA       NA       NA      NA      NA\n2      NA       NA     NA      NA       NA       NA       NA      NA      NA\n3      NA       NA     NA      NA       NA       NA       NA      NA      NA\n4      NA       NA     NA      NA       NA       NA       NA      NA      NA\n5      NA       NA     NA      NA       NA       NA       NA      NA      NA\n6      NA       NA     NA      NA       NA       NA       NA      NA      NA\n  SCHOOLN EFAMTYPE AGYOWNK FINALWT\n1       1        5      NA     537\n2       1        2      NA     106\n3      NA       11      NA     164\n4       1       18      NA     143\n5       1        1      NA     218\n6       1        6       1     575\n\nis.data.frame(lfs_2023)\n\n[1] TRUE\n\nlfs_2023$WAGES &lt;- rnorm(nrow(lfs_2023), 100, 8) # create a variable by name in a dataframe\nlfs_2023$BENEFITS &lt;- rexp(nrow(lfs_2023), 1/25)\nlfs_2023t &lt;- tibble::as_tibble(lfs_2023) # convert our dataframe to the enhance dataframe type tibble\nlfs_2023t\n\n# A tibble: 108,982 × 62\n   REC_NUM SURVYEAR SURVMNTH LFSSTAT  PROV   CMA AGE_12 AGE_6   SEX MARSTAT\n     &lt;int&gt;    &lt;int&gt;    &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;\n 1       1     2023        9       4    48     7     10    NA     2       1\n 2       2     2023        9       1    13     0     10    NA     1       1\n 3       3     2023        9       4    24     0     12    NA     2       2\n 4       4     2023        9       1    47     0      7    NA     1       1\n 5       5     2023        9       1    46     6      9    NA     1       6\n 6       6     2023        9       4    35     3      2     4     2       2\n 7       7     2023        9       4    24     0     12    NA     2       1\n 8       8     2023        9       1    11     0      6    NA     1       1\n 9       9     2023        9       4    35     0     12    NA     1       1\n10      10     2023        9       1    24     0      7    NA     1       5\n# ℹ 108,972 more rows\n# ℹ 52 more variables: EDUC &lt;int&gt;, MJH &lt;int&gt;, EVERWORK &lt;int&gt;, FTPTLAST &lt;int&gt;,\n#   COWMAIN &lt;int&gt;, IMMIG &lt;int&gt;, NAICS_21 &lt;int&gt;, NOC_10 &lt;int&gt;, NOC_43 &lt;int&gt;,\n#   YABSENT &lt;int&gt;, WKSAWAY &lt;int&gt;, PAYAWAY &lt;int&gt;, UHRSMAIN &lt;int&gt;,\n#   AHRSMAIN &lt;int&gt;, FTPTMAIN &lt;int&gt;, UTOTHRS &lt;int&gt;, ATOTHRS &lt;int&gt;,\n#   HRSAWAY &lt;int&gt;, YAWAY &lt;int&gt;, PAIDOT &lt;int&gt;, UNPAIDOT &lt;int&gt;, XTRAHRS &lt;int&gt;,\n#   WHYPT &lt;int&gt;, TENURE &lt;int&gt;, PREVTEN &lt;int&gt;, HRLYEARN &lt;int&gt;, UNION &lt;int&gt;, …\n\nstr(lfs_2023t) # structure\n\ntibble [108,982 × 62] (S3: tbl_df/tbl/data.frame)\n $ REC_NUM : int [1:108982] 1 2 3 4 5 6 7 8 9 10 ...\n $ SURVYEAR: int [1:108982] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 ...\n $ SURVMNTH: int [1:108982] 9 9 9 9 9 9 9 9 9 9 ...\n $ LFSSTAT : int [1:108982] 4 1 4 1 1 4 4 1 4 1 ...\n $ PROV    : int [1:108982] 48 13 24 47 46 35 24 11 35 24 ...\n $ CMA     : int [1:108982] 7 0 0 0 6 3 0 0 0 0 ...\n $ AGE_12  : int [1:108982] 10 10 12 7 9 2 12 6 12 7 ...\n $ AGE_6   : int [1:108982] NA NA NA NA NA 4 NA NA NA NA ...\n $ SEX     : int [1:108982] 2 1 2 1 1 2 2 1 1 1 ...\n $ MARSTAT : int [1:108982] 1 1 2 1 6 2 1 1 1 5 ...\n $ EDUC    : int [1:108982] 2 5 0 2 3 4 0 2 2 5 ...\n $ MJH     : int [1:108982] NA 1 NA 1 1 NA NA 1 NA 1 ...\n $ EVERWORK: int [1:108982] 2 NA 2 NA NA 2 3 NA 2 NA ...\n $ FTPTLAST: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ COWMAIN : int [1:108982] NA 6 NA 5 6 NA NA 3 NA 6 ...\n $ IMMIG   : int [1:108982] 3 3 3 2 3 3 3 3 3 3 ...\n $ NAICS_21: int [1:108982] NA 15 NA 6 6 NA NA 10 NA 12 ...\n $ NOC_10  : int [1:108982] NA 9 NA 8 1 NA NA 1 NA 2 ...\n $ NOC_43  : int [1:108982] NA 40 NA 35 4 NA NA 3 NA 5 ...\n $ YABSENT : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ WKSAWAY : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ PAYAWAY : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ UHRSMAIN: int [1:108982] NA 250 NA 400 500 NA NA 450 NA 400 ...\n $ AHRSMAIN: int [1:108982] NA 250 NA 400 500 NA NA 500 NA 400 ...\n $ FTPTMAIN: int [1:108982] NA 2 NA 1 1 NA NA 1 NA 1 ...\n $ UTOTHRS : int [1:108982] NA 250 NA 400 500 NA NA 450 NA 400 ...\n $ ATOTHRS : int [1:108982] NA 250 NA 400 500 NA NA 500 NA 400 ...\n $ HRSAWAY : int [1:108982] NA NA NA NA NA NA NA 0 NA NA ...\n $ YAWAY   : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ PAIDOT  : int [1:108982] NA NA NA NA NA NA NA 150 NA NA ...\n $ UNPAIDOT: int [1:108982] NA NA NA NA NA NA NA 0 NA NA ...\n $ XTRAHRS : int [1:108982] NA NA NA NA NA NA NA 150 NA NA ...\n $ WHYPT   : int [1:108982] NA 1 NA NA NA NA NA NA NA NA ...\n $ TENURE  : int [1:108982] NA 4 NA 40 240 NA NA 240 NA 240 ...\n $ PREVTEN : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ HRLYEARN: int [1:108982] NA NA NA NA NA NA NA 4418 NA NA ...\n $ UNION   : int [1:108982] NA NA NA NA NA NA NA 3 NA NA ...\n $ PERMTEMP: int [1:108982] NA NA NA NA NA NA NA 1 NA NA ...\n $ ESTSIZE : int [1:108982] NA NA NA NA NA NA NA 4 NA NA ...\n $ FIRMSIZE: int [1:108982] NA NA NA NA NA NA NA 4 NA NA ...\n $ DURUNEMP: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ FLOWUNEM: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ UNEMFTPT: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ WHYLEFTO: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ WHYLEFTN: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ DURJLESS: int [1:108982] 159 NA 185 NA NA 17 NA NA 240 NA ...\n $ AVAILABL: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ LKPUBAG : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ LKEMPLOY: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ LKRELS  : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ LKATADS : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ LKANSADS: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ LKOTHERN: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ PRIORACT: int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ YNOLOOK : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ TLOLOOK : int [1:108982] NA NA NA NA NA NA NA NA NA NA ...\n $ SCHOOLN : int [1:108982] 1 1 NA 1 1 1 NA 1 NA 1 ...\n $ EFAMTYPE: int [1:108982] 5 2 11 18 1 6 11 3 11 14 ...\n $ AGYOWNK : int [1:108982] NA NA NA NA NA 1 NA 3 NA 2 ...\n $ FINALWT : int [1:108982] 537 106 164 143 218 575 247 44 127 108 ...\n $ WAGES   : num [1:108982] 87.2 97.9 110.2 99.8 102.2 ...\n $ BENEFITS: num [1:108982] 0.836 9.204 13.544 4.47 22.54 ..."
  },
  {
    "objectID": "index.html#quick-exploration-of-the-lfs-dataset",
    "href": "index.html#quick-exploration-of-the-lfs-dataset",
    "title": "SAS and R comparisons",
    "section": "Quick exploration of the lfs dataset",
    "text": "Quick exploration of the lfs dataset\n\ndim(lfs_2023t) # number of rows and columns\n\n[1] 108982     62\n\n## keep variables REC_NUM, LFSSTAT, PROV, \nlist_of_variables &lt;- toupper(c(\"REC_NUM\", \"PROV\", \"MARSTAT\", \"NOC_10\", \"FINALWT\",\"sex\", \"COWMAIN\"))\nvar_of_interest &lt;- toupper(c(\"rec_num\",\"LFSSTAT\", \"everwork\", \"permtemp\", \"wages\", \"benefits\"))\n\nfile_var_analysis &lt;- lfs_2023t %&gt;% select(all_of(list_of_variables))\nfile_var_interest&lt;- lfs_2023t %&gt;% select(all_of(var_of_interest) ) ## used all_of() because the use of a vector is now deprecated.\n\n\nBloc 1: Datasets: drop, keep and rename variables\n\n# bloc 1: drop and rename variables\n## drop \nfile_var_analysis &lt;- file_var_analysis %&gt;% select(-COWMAIN)\n## rename the variable weight to fweight\nfile_var_analysis &lt;- file_var_analysis %&gt;% rename(FWEIGHT = FINALWT)\n\n\n\nBloc 2: New variables and conditional editing\nCreate a variable called INCOME as the sum of WAGES and BENEFITS.\n\nfile_var_interest &lt;- file_var_interest %&gt;% mutate(INCOME = WAGES + BENEFITS)\nfile_var_interest[, c(\"REC_NUM\",\"INCOME\", \"WAGES\", \"BENEFITS\")] # can use select() too\n\n# A tibble: 108,982 × 4\n   REC_NUM INCOME WAGES BENEFITS\n     &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1       1   88.0  87.2    0.836\n 2       2  107.   97.9    9.20 \n 3       3  124.  110.    13.5  \n 4       4  104.   99.8    4.47 \n 5       5  125.  102.    22.5  \n 6       6  214.  107.   107.   \n 7       7  165.  101.    63.7  \n 8       8  107.  106.     0.746\n 9       9  107.   90.7   15.9  \n10      10  123.  112.    11.0  \n# ℹ 108,972 more rows\n\n#file_var_interest %&gt;% select(REC_NUM, INCOME, WAGES, BENEFITS)\n\nConditional editing - Use the table below to split Canada into different regions.\n\nRegions in Canada\n\n\n\n\n\n\nRegions\nProvinces\n\n\n\n\nBritish Columbia\nBritish Columbia (59)\n\n\nCanadian Prairies\nAlberta (48), Saskatchewan (47), Manitoba (46)\n\n\nOntario\nOntario (35)\n\n\nQuebec\nQuebec (24)\n\n\nAtlantic Canada\nNew Brunswick (13), Prince Edward Island (11), Nova Scotia (12), Newfoundland and Labrador (10)\n\n\nNorthern Canada\nYukon, Northwest Territories, Nunavut\n\n\n\n\n# frequency\ntable(file_var_analysis$PROV)\n\n\n   10    11    12    13    24    35    46    47    48    59 \n 4959  2572  5213  5368 19671 36239  7447  5950  8587 12976 \n\nfile_var_analysis &lt;- file_var_analysis %&gt;% mutate(region = case_when(PROV %in% c(59) ~ \"British Columbia\", PROV %in% c(48,47,46) ~ \"Prairies\", PROV %in% c(35) ~\"Ontario\", PROV %in% c(24) ~\"Quebec\", PROV %in% c(13,11,12,10) ~ \"Atlantic\", TRUE~ \"\"))\n\nfile_var_analysis\n\n# A tibble: 108,982 × 7\n   REC_NUM  PROV MARSTAT NOC_10 FWEIGHT   SEX region  \n     &lt;int&gt; &lt;int&gt;   &lt;int&gt;  &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;chr&gt;   \n 1       1    48       1     NA     537     2 Prairies\n 2       2    13       1      9     106     1 Atlantic\n 3       3    24       2     NA     164     2 Quebec  \n 4       4    47       1      8     143     1 Prairies\n 5       5    46       6      1     218     1 Prairies\n 6       6    35       2     NA     575     2 Ontario \n 7       7    24       1     NA     247     2 Quebec  \n 8       8    11       1      1      44     1 Atlantic\n 9       9    35       1     NA     127     1 Ontario \n10      10    24       5      2     108     1 Quebec  \n# ℹ 108,972 more rows\n\ntable(file_var_analysis$region, useNA = \"ifany\")\n\n\n        Atlantic British Columbia          Ontario         Prairies \n           18112            12976            36239            21984 \n          Quebec \n           19671 \n\n\nConditional editing using ** if_else**\n\nfile_var_interest &lt;- file_var_interest %&gt;% mutate(RICH = if_else(INCOME &gt; 105, 1,0))\n\ntable(file_var_interest$rich)\n\nWarning: Unknown or uninitialised column: `rich`.\n\n\n&lt; table of extent 0 &gt;\n\n\n\n\nBloc 3: Conditional filtering\nCreate a file containing only records with variable \\(RICH = 1\\).\n\nrich_guys &lt;- file_var_interest %&gt;% filter(RICH == 1)\nprint(rich_guys)\n\n# A tibble: 87,136 × 8\n   REC_NUM LFSSTAT EVERWORK PERMTEMP WAGES BENEFITS INCOME  RICH\n     &lt;int&gt;   &lt;int&gt;    &lt;int&gt;    &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n 1       2       1       NA       NA  97.9    9.20    107.     1\n 2       3       4        2       NA 110.    13.5     124.     1\n 3       5       1       NA       NA 102.    22.5     125.     1\n 4       6       4        2       NA 107.   107.      214.     1\n 5       7       4        3       NA 101.    63.7     165.     1\n 6       8       1       NA        1 106.     0.746   107.     1\n 7       9       4        2       NA  90.7   15.9     107.     1\n 8      10       1       NA       NA 112.    11.0     123.     1\n 9      11       4        2       NA 106.     2.45    109.     1\n10      12       4        3       NA  93.7   20.4     114.     1\n# ℹ 87,126 more rows\n\n\nCreate a file containing only married and living in common-law\n\nin_couple &lt;- file_var_analysis %&gt;% filter(MARSTAT %in% c(1,2))\nin_couple\n\n# A tibble: 65,688 × 7\n   REC_NUM  PROV MARSTAT NOC_10 FWEIGHT   SEX region  \n     &lt;int&gt; &lt;int&gt;   &lt;int&gt;  &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;chr&gt;   \n 1       1    48       1     NA     537     2 Prairies\n 2       2    13       1      9     106     1 Atlantic\n 3       3    24       2     NA     164     2 Quebec  \n 4       4    47       1      8     143     1 Prairies\n 5       6    35       2     NA     575     2 Ontario \n 6       7    24       1     NA     247     2 Quebec  \n 7       8    11       1      1      44     1 Atlantic\n 8       9    35       1     NA     127     1 Ontario \n 9      11    24       1     NA     212     1 Quebec  \n10      13    35       1     NA      89     1 Ontario \n# ℹ 65,678 more rows\n\ntable(in_couple$PROV) # number of people in couple in the file\n\n\n   10    11    12    13    24    35    46    47    48    59 \n 3193  1566  3025  3236 11692 21723  4521  3603  5320  7809 \n\n\n\n\nBloc 4: Counting and summarizing\nNumber of males and females in the file.\n\nfile_var_analysis %&gt;% count(SEX)\n\n# A tibble: 2 × 2\n    SEX     n\n  &lt;int&gt; &lt;int&gt;\n1     1 52999\n2     2 55983\n\n\nNumber of males and females by region in Canada in the file.\n\nfile_var_analysis %&gt;% count(region, SEX)\n\n# A tibble: 10 × 3\n   region             SEX     n\n   &lt;chr&gt;            &lt;int&gt; &lt;int&gt;\n 1 Atlantic             1  8726\n 2 Atlantic             2  9386\n 3 British Columbia     1  6305\n 4 British Columbia     2  6671\n 5 Ontario              1 17637\n 6 Ontario              2 18602\n 7 Prairies             1 10753\n 8 Prairies             2 11231\n 9 Quebec               1  9578\n10 Quebec               2 10093\n\n\nAdding percentage - can call mutate()\n\nfile_var_analysis %&gt;% count(region, SEX) %&gt;% mutate(percent = 100*n/sum(n))\n\n# A tibble: 10 × 4\n   region             SEX     n percent\n   &lt;chr&gt;            &lt;int&gt; &lt;int&gt;   &lt;dbl&gt;\n 1 Atlantic             1  8726    8.01\n 2 Atlantic             2  9386    8.61\n 3 British Columbia     1  6305    5.79\n 4 British Columbia     2  6671    6.12\n 5 Ontario              1 17637   16.2 \n 6 Ontario              2 18602   17.1 \n 7 Prairies             1 10753    9.87\n 8 Prairies             2 11231   10.3 \n 9 Quebec               1  9578    8.79\n10 Quebec               2 10093    9.26\n\n\nNumber of people by marital status and regions.\n\nfile_var_analysis %&gt;% group_by(region, MARSTAT) %&gt;% summarize(nrecords = n())\n\n`summarise()` has grouped output by 'region'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 30 × 3\n# Groups:   region [5]\n   region           MARSTAT nrecords\n   &lt;chr&gt;              &lt;int&gt;    &lt;int&gt;\n 1 Atlantic               1     9051\n 2 Atlantic               2     1969\n 3 Atlantic               3     1118\n 4 Atlantic               4      465\n 5 Atlantic               5      875\n 6 Atlantic               6     4634\n 7 British Columbia       1     6540\n 8 British Columbia       2     1269\n 9 British Columbia       3      733\n10 British Columbia       4      281\n# ℹ 20 more rows\n\n\n\n\nBloc 5: Combining datasets\nCombining by rows\n\n# for tests purposes only\ndata1 &lt;- file_var_analysis %&gt;% slice((1:50000))\ndata2 &lt;- file_var_analysis %&gt;% slice(-(1:50000))\n\n# combine the two sets\ncomb_file  &lt;- bind_rows(data1, data2)\nidentical(comb_file, file_var_analysis) # return TRUE - both files are identical\n\n[1] TRUE\n\nrm(list = c(\"comb_file\"))\n\nMerging files\n\n# inner join == in(a and b)\nfile_inner_join &lt;- file_var_interest %&gt;% inner_join(file_var_analysis, by = \"REC_NUM\")\n\nfile_left_join &lt;- file_var_interest %&gt;% left_join(file_var_analysis, by = \"REC_NUM\")\n\nfile_right_join &lt;- file_var_interest %&gt;% right_join(file_var_analysis, by = \"REC_NUM\")\n\n\n\nBloc 6:\n\n# weighted sum\nfile_inner_join %&gt;% group_by(region) %&gt;% summarize( tot_income = sum(INCOME*FWEIGHT))\n\n# A tibble: 5 × 2\n  region            tot_income\n  &lt;chr&gt;                  &lt;dbl&gt;\n1 Atlantic          270552874.\n2 British Columbia  570132409.\n3 Ontario          1609678184.\n4 Prairies          729034537.\n5 Quebec            908103481.\n\n# Number of weighted people\nfile_inner_join %&gt;% group_by(region) %&gt;% summarize( tot_pers = sum(FWEIGHT))\n\n# A tibble: 5 × 2\n  region           tot_pers\n  &lt;chr&gt;               &lt;int&gt;\n1 Atlantic          2160780\n2 British Columbia  4547990\n3 Ontario          12899730\n4 Prairies          5820510\n5 Quebec            7287274\n\n# number of females weighted\nfile_inner_join %&gt;% group_by(region) %&gt;% summarize( tot_females = sum(FWEIGHT*(SEX = 2)))\n\n# A tibble: 5 × 2\n  region           tot_females\n  &lt;chr&gt;                  &lt;dbl&gt;\n1 Atlantic             4321560\n2 British Columbia     9095980\n3 Ontario             25799460\n4 Prairies            11641020\n5 Quebec              14574548"
  }
]